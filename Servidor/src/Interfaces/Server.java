package Interfaces;

import java.awt.event.MouseEvent;
import java.rmi.AlreadyBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import servidor.ConexionRMI;
import servidor.Servidor;

public class Server extends javax.swing.JFrame {
    private ConexionRMI conexion = new ConexionRMI();
    private static Server server = null;
    protected Server() {
        initComponents();
        this.setVisible(true);
    }
    
    public static Server getInstance() {
      if(server == null) {
         server = new Server();
      }
      return server;
   }
    //Se muestra por pantalla cuando un cliente se registra correctamente
    public void imprimirConexion(String nombre, String clave){
        JOptionPane.showMessageDialog(this, "Conexion Entrante \n Nombre: "+nombre+"\n Clave: "+clave, "Mensaje", 0);
        System.out.println("Conexion Entrante - Nombre: '"+nombre+"' Clave: '"+clave+"'");
    }
    //Se inicia el servidor en localhost puerto 1099
    //con registro "Implementacion"
    private void iniciarServer(MouseEvent evt) throws AlreadyBoundException{
        try{
            System.out.println("Iniciando Servidor...");
            Registry registro = this.conexion.getRegistry();
            Servidor servidor = new Servidor();
            registro.rebind("Implementacion", servidor);
            this.jButton1.setEnabled(false);
            System.out.println("Servidor iniciado");
        }
        catch (RemoteException ex){
            System.out.println("Error al iniciar servidor: "+ex);
        }
    }
    //Se detiende el servidor
    private void detenerServer(MouseEvent evt){
        try{
            System.out.println("Deteniendo servidor...");
            this.conexion.detener();
            this.jButton2.setEnabled(true);
            this.jButton1.setEnabled(true);
            System.out.println("Servidor detenido");
        }
        catch (RemoteException ex){
            System.out.println("Error al detener servidor: "+ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Iniciar Server");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Detener Server");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed
    //boton para iniciar servidor
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            iniciarServer(evt);
        } catch (AlreadyBoundException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked
    //boton para detener servidor
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        detenerServer(evt);
    }//GEN-LAST:event_jButton2MouseClicked
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}

